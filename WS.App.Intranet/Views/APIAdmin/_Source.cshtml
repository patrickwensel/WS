@using Kendo.Mvc.UI
@using WS.App.Intranet.ViewModels.APIAdmin

@(Html.Kendo().Grid<SourceViewModel>()
    .Name("sourceGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Token);
        columns.Bound(p => p.Name);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
                   .Pageable(paging => paging
                                   .Input(false)
                                   .Numeric(true)
                                   .PreviousNext(true)
                                   .PageSizes(new[] { 10, 25, 50 })
                                   .Refresh(true))

    .Sortable()
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
            {
                model.Id(p => p.ID);
                model.Field(p => p.ID).Editable(false);
                model.Field(p => p.Token).Editable(false);

            })
        .Create(update => update.Action("SourceCreate", "APIAdmin"))
        .Read(read => read.Action("SourceRead", "APIAdmin"))
        .Update(update => update.Action("SourceUpdate", "APIAdmin"))
        .Destroy(update => update.Action("SourceDestroy", "APIAdmin"))
    )
      )
<br>

<script type="text/javascript">
    
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    
</script>